// COMPREHENSIVE TEST SUITE
// Tests all major language features together

func main[] |
  print["=== COMPREHENSIVE TEST SUITE ==="]
  
  // Variables and types
  print["\n--- Variables and Types ---"]
  let num := 42
  let decimal := 3.14
  let text := "Hello"
  let flag := true
  let nothing := null
  let arr := [1, 2, 3]
  let obj := {"key": "value"}
  
  print["Number: " + str[num]]
  print["Decimal: " + str[decimal]]
  print["Text: " + text]
  print["Boolean: " + str[flag]]
  print["Null: " + str[nothing]]
  print["Array: " + str[arr]]
  print["Object: " + str[obj]]
  
  // Arithmetic operations
  print["\n--- Arithmetic Operations ---"]
  let a := 10
  let b := 3
  print[str[a] + " + " + str[b] + " = " + str[a + b]]
  print[str[a] + " - " + str[b] + " = " + str[a - b]]
  print[str[a] + " * " + str[b] + " = " + str[a * b]]
  print[str[a] + " / " + str[b] + " = " + str[a / b]]
  print[str[a] + " % " + str[b] + " = " + str[a % b]]
  print[str[a] + " ** " + str[b] + " = " + str[a ** b]]
  
  // Comparison operations
  print["\n--- Comparison Operations ---"]
  print[str[a] + " == " + str[b] + ": " + str[a == b]]
  print[str[a] + " != " + str[b] + ": " + str[a != b]]
  print[str[a] + " < " + str[b] + ": " + str[a < b]]
  print[str[a] + " > " + str[b] + ": " + str[a > b]]
  print[str[a] + " <= " + str[b] + ": " + str[a <= b]]
  print[str[a] + " >= " + str[b] + ": " + str[a >= b]]
  
  // Logical operations
  print["\n--- Logical Operations ---"]
  let p := true
  let q := false
  print["true && false: " + str[p && q]]
  print["true || false: " + str[p || q]]
  print["!true: " + str[!p]]
  print["!false: " + str[!q]]
  
  // Control flow
  print["\n--- Control Flow ---"]
  let score := 85
  if [score >= 90] |
    print["Grade: A"]
  ^ else if [score >= 80] |
    print["Grade: B"]
  ^ else if [score >= 70] |
    print["Grade: C"]
  ^ else |
    print["Grade: F"]
  ^
  
  // While loops
  print["\n--- While Loops ---"]
  let count := 0
  let sum := 0
  while [count < 5] |
    sum := sum + count
    count := count + 1
  ^
  print["Sum of 0-4: " + str[sum]]
  
  // Nested loops
  print["\n--- Nested Loops ---"]
  let i := 1
  while [i <= 3] |
    let j := 1
    while [j <= 3] |
      print[str[i] + " x " + str[j] + " = " + str[i * j]]
      j := j + 1
    ^
    i := i + 1
  ^
  
  // Functions
  print["\n--- Functions ---"]
  
  func add[x, y] |
    return[x + y]
  ^
  
  func multiply[x, y] |
    return[x * y]
  ^
  
  func factorial[n] |
    if [n <= 1] |
      return[1]
    ^
    return[n * factorial[n - 1]]
  ^
  
  print["add(5, 3): " + str[add[5, 3]]]
  print["multiply(4, 7): " + str[multiply[4, 7]]]
  print["factorial(5): " + str[factorial[5]]]
  
  // Arrays
  print["\n--- Arrays ---"]
  let numbers := [1, 2, 3, 4, 5]
  print["Array: " + str[numbers]]
  print["Length: " + str[len[numbers]]]
  print["First: " + str[numbers[0]]]
  print["Last: " + str[numbers[4]]]
  
  // Array modification
  numbers[0] := 10
  numbers[4] := 50
  print["Modified: " + str[numbers]]
  
  // Nested arrays
  let matrix := [[1, 2], [3, 4], [5, 6]]
  print["Matrix: " + str[matrix]]
  print["matrix[1][1]: " + str[matrix[1][1]]]
  
  // Dictionaries
  print["\n--- Dictionaries ---"]
  let person := {"name": "Alice", "age": 30, "active": true}
  print["Person: " + str[person]]
  print["Name: " + str[person["name"]]]
  print["Age: " + str[person["age"]]]
  print["Active: " + str[person["active"]]]
  
  // Dictionary modification
  person["age"] := 31
  print["Modified age: " + str[person["age"]]]
  
  // Complex data structures
  print["\n--- Complex Data Structures ---"]
  let users := [
    {"name": "Alice", "score": 95},
    {"name": "Bob", "score": 87},
    {"name": "Charlie", "score": 92}
  ]
  
  print["Users: " + str[users]]
  print["First user name: " + str[users[0]["name"]]]
  print["Second user score: " + str[users[1]["score"]]]
  
  // Built-in functions
  print["\n--- Built-in Functions ---"]
  let test_arr := [10, -5, 20, -15, 30]
  print["Array: " + str[test_arr]]
  print["Length: " + str[len[test_arr]]]
  print["Min: " + str[min[test_arr]]]
  print["Max: " + str[max[test_arr]]]
  print["Abs(-5): " + str[abs[-5]]]
  
  // Algorithm: Bubble sort
  print["\n--- Bubble Sort Algorithm ---"]
  func bubble_sort[arr] |
    let n := len[arr]
    let i := 0
    while [i < n] |
      let j := 0
      while [j < n - i - 1] |
        if [arr[j] > arr[j + 1]] |
          let temp := arr[j]
          arr[j] := arr[j + 1]
          arr[j + 1] := temp
        ^
        j := j + 1
      ^
      i := i + 1
    ^
    return[arr]
  ^
  
  let unsorted := [64, 34, 25, 12, 22]
  print["Unsorted: " + str[unsorted]]
  let sorted := bubble_sort[unsorted]
  print["Sorted: " + str[sorted]]
  
  // Fibonacci sequence
  print["\n--- Fibonacci Sequence ---"]
  func fibonacci[n] |
    if [n <= 1] |
      return[n]
    ^
    return[fibonacci[n - 1] + fibonacci[n - 2]]
  ^
  
  let fib_idx := 0
  while [fib_idx <= 7] |
    print["fib(" + str[fib_idx] + ") = " + str[fibonacci[fib_idx]]]
    fib_idx := fib_idx + 1
  ^
  
  print["\n=== ALL COMPREHENSIVE TESTS PASSED ==="]
^

main[]