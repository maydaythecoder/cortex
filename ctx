#!/bin/bash
# Cortex shorthand command runner
# Usage: ./ctx <example_name> or ./ctx run <file.ctx>

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
RUST_DIR="$SCRIPT_DIR/rust"

# Check if we're in the right directory
if [ ! -d "$RUST_DIR" ]; then
    echo "Error: rust directory not found. Make sure you're in the cortex project root."
    exit 1
fi

# Change to rust directory
cd "$RUST_DIR"

# If no arguments provided, show help
if [ $# -eq 0 ]; then
    echo "Cortex Shorthand Commands"
    echo "========================"
    echo ""
    echo "Usage:"
    echo "  ./ctx <example_name>     - Run a specific example"
    echo "  ./ctx run <file.ctx>     - Run any .ctx file"
    echo "  ./ctx check <file.ctx>   - Check syntax of a file"
    echo "  ./ctx format <file.ctx>  - Format a .ctx file"
    echo ""
    echo "Available examples:"
    echo "  hello_world"
    echo "  function_demo"
    echo "  arithmetic"
    echo "  simple_algorithms"
    echo "  fibonacci"
    echo "  factorial"
    echo "  prime_numbers"
    echo "  bubble_sort"
    echo "  comprehensive_features"
    echo "  ai_ml_comprehensive"
    echo "  simple_loops"
    echo "  loops"
    echo "  printing"
    echo "  simple_arithmetic"
    echo ""
    echo "Examples:"
    echo "  ./ctx hello_world"
    echo "  ./ctx run ../examples/hello_world.ctx"
    echo "  ./ctx check ../examples/hello_world.ctx"
    echo "  ./ctx format ../examples/hello_world.ctx"
    exit 0
fi

# Handle different commands
case "$1" in
    "run")
        if [ $# -lt 2 ]; then
            echo "Error: Please provide a file to run"
            echo "Usage: ./ctx run <file.ctx>"
            exit 1
        fi
        cargo run -- run "$2"
        ;;
    "check")
        if [ $# -lt 2 ]; then
            echo "Error: Please provide a file to check"
            echo "Usage: ./ctx check <file.ctx>"
            exit 1
        fi
        cargo run -- check "$2"
        ;;
    "format")
        if [ $# -lt 2 ]; then
            echo "Error: Please provide a file to format"
            echo "Usage: ./ctx format <file.ctx> [--indent <size>]"
            exit 1
        fi
        if [ $# -eq 4 ] && [ "$3" = "--indent" ]; then
            cargo run -- format "../$2" --indent "$4"
        else
            cargo run -- format "../$2"
        fi
        ;;
    "hello_world")
        cargo run -- run ../examples/hello_world.ctx
        ;;
    "function_demo")
        cargo run -- run ../examples/function_demo.ctx
        ;;
    "arithmetic")
        cargo run -- run ../examples/arithmetic.ctx
        ;;
    "simple_algorithms")
        cargo run -- run ../examples/simple_algorithms.ctx
        ;;
    "fibonacci")
        cargo run -- run ../examples/fibonacci.ctx
        ;;
    "factorial")
        cargo run -- run ../examples/factorial.ctx
        ;;
    "prime_numbers")
        cargo run -- run ../examples/prime_numbers.ctx
        ;;
    "bubble_sort")
        cargo run -- run ../examples/bubble_sort.ctx
        ;;
    "comprehensive_features")
        cargo run -- run ../examples/comprehensive_features.ctx
        ;;
    "ai_ml_comprehensive")
        cargo run -- run ../examples/ai_ml_comprehensive.ctx
        ;;
    "simple_loops")
        cargo run -- run ../examples/simple_loops.ctx
        ;;
    "loops")
        cargo run -- run ../examples/loops.ctx
        ;;
    "printing")
        cargo run -- run ../examples/printing.ctx
        ;;
    "simple_arithmetic")
        cargo run -- run ../examples/simple_arithmetic.ctx
        ;;
    *)
        echo "Error: Unknown example '$1'"
        echo "Run './ctx' without arguments to see available examples"
        exit 1
        ;;
esac
