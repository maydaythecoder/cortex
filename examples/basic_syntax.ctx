// Basic Syntax Demo in Cortex
// Shows variables, expressions, and control flow

// Constants
let MAX_ITERATIONS :: 5
let GREETING :: "Hello from Cortex!"

// Variables
let counter := 0
let message := GREETING

// Main function
func main[] |
  print["=== Cortex Basic Syntax Demo ==="]
  print[""]
  
  // Variables and expressions
  print["Message: " + message]
  print["Counter: " + str[counter]]
  print[""]
  
  // Control flow with if statement
  if [counter < MAX_ITERATIONS] |
    print["Counter is less than " + str[MAX_ITERATIONS]]
  ^
  
  // While loop
  print["Counting up:"]
  while [counter < MAX_ITERATIONS] |
    print["  " + str[counter]]
    counter := counter + 1
  ^
  
  // For loop
  print["Counting down:"]
  for [i in range[MAX_ITERATIONS, 0, -1]] |
    print["  " + str[i]]
  ^
  
  // Mathematical expressions
  let a := 10
  let b := 3
  let sum := a + b
  let product := a * b
  let quotient := a / b
  
  print["Math operations:"]
  print["  " + str[a] + " + " + str[b] + " = " + str[sum]]
  print["  " + str[a] + " * " + str[b] + " = " + str[product]]
  print["  " + str[a] + " / " + str[b] + " = " + str[quotient]]
  
  // Array operations
  let numbers := [1, 2, 3, 4, 5]
  let doubled := numbers * 2
  
  print["Array operations:"]
  print["  Original: " + str[numbers]]
  print["  Doubled: " + str[doubled]]
  
  // Dictionary
  let config := {
    "language": "Cortex",
    "version": "0.1.0",
    "compiled": true
  }
  
  print["Configuration:"]
  print["  Language: " + config["language"]]
  print["  Version: " + config["version"]]
  print["  Compiled: " + str[config["compiled"]]]
  
  print[""]
  print["=== Demo Complete ==="]
^

// Entry point
main[]
